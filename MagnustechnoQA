TESTING,JAVA, TESTNG, SELENIUM all in one

Tester Role
----------
Tests application according to the requirement of the system.
-It can be verifying  the FRD doc from BA
-Making test artificacts (test strategy, test plan, test cases, bug reports)
-create test environment to check every new/changed build from developers, for it pull the prod to test env

service based company(wipro,tcs) work for product based company(microsoft,google)

project
-------
To address the business issues or business oppourtunity rounds of official and un-official meetings
among the business people (C level, Business Analyst). Once it looks feasible project initiation Document (PID) is created
to look overall project details by BA. 

Then PM is hired or selected  to plan for resources/times lines for the project. Then he will prepare Porject plan document
where very detail about the project resources are described. (time,team,risk,mitigation,cost)

SDLC
---
1. initiation (project initiation) // PID doc by BA
2. Requirement (user(URS doc and software (SRS doc)) //srs is base for dev and tester prepared by BA
3. Design (LOW and HIGH) // tech architech Technical DOC 
login // modules interact or may not interact to each other to make a functionality of sytem.
signup  //
4. Development
5. Testing (dev,tester,user all participate) 
dev= unit testing to own code to see works as per expected, end to end testing.
tester= feature testing, integration testing(module,db,log), System Testing (live mode)
user= user acceptancce testing
6.Maintenance (bug fix, upgrades)

Developement Metodologies
---------------------------
1. Water fall 
2. Agile (incremental and iterative model)
sprint time =time to realase product to market (should not be more then 2 to 4 weeks)
product backlog= holds all requirements(doc)
sprint backlog= left from previous sprint goes here (doc)

scrum master= role of master for cordination for team mgnt(role)
daily standup meeting (13 min to 30 min) to talk about blockers and their solutions (meeting)
restropective meeting ( what is good, what went wrong, what we could do for better) (meeting)


TEST CASE
----------
not to miss every cases for a functino we write test case.

used test mgnt tools (ALM) or excel first then upload

contains
testcase_ID   Descrption   Steps   Precondition     TestData   Expected   Actual      Result


JAVA BASICS
-----
download jdk, eclipse

1. hello world to show env.
2. variables,errors, debugging
3. functions,static, final,switch, if , else, loops
4. object, class (OOD concepts),Abstract, inheritance, polymorphism(overloading, overiding)
5. Threads
6.collections (arraylist, LinkedList, set,iterator), HashMap, HashTable

TestNG(needs jdk 5 or higher)  open source automated testing framework
------
TestNG developed in java
@annotation based
does not required main method
next generation of junit, not only tests unit or  a function  but tests unit,integration,end to end testing
Mulithreading testing can be done

Installing TestNG
----------------
help->marketplace->type TestNG and install

simple code
import org.testng.annotations.Test;
public class testNGBasic {
@Test
public void test(){
	System.out.println("test is started");	
}
}

xml is the base for testNG, default creation is 
suite is a group of test in multiple class
A single test can contain multiple classes
eg: 
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<suite name="Default suite">
  <test verbose="2" name="Default test">
    <classes>
      <class name="san.com.testNGBasic"/>
    </classes>
  </test> <!-- Default test -->
</suite> <!-- Default suite -->


The default location of the above file can be copied to any project folder and run with testNG to view the
reports in eclipse editor. similarly we can add multiple classes inside <classes>.

TO view the report run the xml file and refresh the project to see a new folder created test_output where you
can run the .html file to see the result generated.

Fail report for test is generated in diff files which can be runned to check only failed section.

Steps of Execution
------------------
first execute class as testNG and then .xml (suite) as testNG to see the changes

Basic Annotations for Test
-------------------------
@Test  //to define a normal test case

@BeforeSuite 
@AfterSuite

@BeforeTest
@AfterTest

@BeforeClass
@AfterClass

@BeforeMethod   //for each method this is executed
@AfterMethod    //for each method this is executed

Disable the test method execution with enabled properties
@Test(enabled=false)

how to just execute one single oneMethod() ??
--------------
Ans: With using <methods> tag and <include> tage in testSuite xml file

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<suite name="test">
  <test verbose="2" name="test function">
    <classes>
      <class name="san.com.testNGBasic"/>
      <methods>
      <include name="justexecuteMethod"></include>
      </methods>
      </class>
    </classes>
  </test> <!-- Default test -->
</suite> <!-- Default suite -->


Assertion
---------
failure= expected value differ the actual value, diff in requirements

Assertion is passed  the test case if requirement or condition is pass
Assertion is failed the test case if requirement or condition is fail.

handled by Assert class

TYPES(HARD AND SOFT)
------------------
HardAssertion will stop the execution flow
assertTue()
assertFalse()
eg: 
int a=20;
Assert.assertTrue(a==30)   //failed
// will fail in report as a not equal to 20, only pass i a=30
//means assertTrue is a static method, so it can be direclty accessed.

Assert.assertFalse(a==30) // passed as, a==30 is true

SoftAssertion will continue the execution flow
SoftAssert sa=new SoftAssert();
sa.assertTrue(a==30);

GROUPS
-----
arranging the common methods(units) as a gingle group using groups properties
defines when to check the methods in testing like sanity,regression,feature

eg:
@Test(groups={"sanity","regression"})
public void calcInt(){
}

@Test(groups={"regression"})
public void calcTime(){
}

control of groups can be made through XML file, add it in test level not in class level

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<suite name="test">
  <test verbose="2" name="test function">
  <groups>
  <run>
  <include name="regression"></include>
  </run>
  </groups>
    <classes>
      <class name="san.com.testNGBasic"/>
      </class>
    </classes>
  </test> <!-- Default test -->
</suite> <!-- Default suite -->

Creating dependecny in between tests, using dependsOnMethods properties
--------------------------
eg: if signup is failed dont go for login
@Test
public void signup(){
}

@Test(dependsOnMethods="signup")
public void login(){
}


Passing Parameters 
----------------
1st method

through xml <parameter> and then @Parameter  at suite level

?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<suite name="Default suite">
<parameter name="paramName" value="Sandesh"></parameter>
  <test verbose="2" name="Default test">
    <classes>
      <class name="san.com.testNGBasic"/>
    </classes>
  </test> <!-- Default test -->
</suite> <!-- Default suite -->

Now, use the paramName to class

@Test
@Parameters(value="paramName)

2nd Method using DataProvider (passing set of multiple values) for DDT (data driven testing)

@DataProvider
public Object[][]  provideData(){
retrun new Object[][]{
{1,5},
{4,6}
{7,9}
};
}
@Test(dataProvider="provideData")
publiv void add(int a, int b){
out.println(a+b);
}
// the add method will be executeed 3 times with diff parameter values,this can be done after reading it from excel too

TestNG report, ExtentReport are example of other Reporting api used in TestNG.

SELENIUM
........
types
1. Selenium IDE //record and play, can create test suite, test, breakpoints, can import the generated codes to java ide
file->export choose your language to import
2. RC // old tech, based on client-server, internally works with jscript
3. WebDriver // WebDriver is an interface works directly with native browser codes to all to all web browsers
so WebDriver interfaces are implemented for chrome,ie,firefox,edge etc.
4. Grid

Selenium WebDriver
---------
ie explorer or other browser are 3rd party browsers whose
implementation for WebDriver interface is defined using selenium.
so selenium webDriver is an api to handle automation through web browsers.

jar required for selenium
------
selenium-server-standalone jar
and add it to buid path

test the code
------------


